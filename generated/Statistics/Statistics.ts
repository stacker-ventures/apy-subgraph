// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ProfitDeclared extends ethereum.Event {
  get params(): ProfitDeclared__Params {
    return new ProfitDeclared__Params(this);
  }
}

export class ProfitDeclared__Params {
  _event: ProfitDeclared;

  constructor(event: ProfitDeclared) {
    this._event = event;
  }

  get profit(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalAmountInPool(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalSharesInPool(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get performanceFeeTotal(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get baseFeeTotal(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class Statistics extends ethereum.SmartContract {
  static bind(address: Address): Statistics {
    return new Statistics("Statistics", address);
  }
}

export class DeclareProfitCall extends ethereum.Call {
  get inputs(): DeclareProfitCall__Inputs {
    return new DeclareProfitCall__Inputs(this);
  }

  get outputs(): DeclareProfitCall__Outputs {
    return new DeclareProfitCall__Outputs(this);
  }
}

export class DeclareProfitCall__Inputs {
  _call: DeclareProfitCall;

  constructor(call: DeclareProfitCall) {
    this._call = call;
  }

  get profit(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get totalAmountInPool(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get totalSharesInPool(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get performanceFeeTotal(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get baseFeeTotal(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class DeclareProfitCall__Outputs {
  _call: DeclareProfitCall;

  constructor(call: DeclareProfitCall) {
    this._call = call;
  }
}
